version: '3.7'
services:
  zookeeper:
    container_name: zookeeper
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - rvelastic-net
  kafka:
    restart: always
    container_name: kafka
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - rvelastic-net
  opensearch-node1: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    restart: always
    image: opensearchproject/opensearch:latest # Specifying the latest available image - modify if you want a specific version
    container_name: opensearch-node1
    environment:
      - cluster.name=opensearch-cluster # Name the cluster
      - node.name=opensearch-node1 # Name the node that will run in this container
      - discovery.seed_hosts=opensearch-node1 # Nodes to look for when discovering the cluster
      - cluster.initial_cluster_manager_nodes=opensearch-node1 # Nodes eligible to serve as cluster manager
      - bootstrap.memory_lock=true # Disable JVM heap memory swapping
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m" # Set min and max JVM heap sizes to at least 50% of system RAM
      - OPENSEARCH_INITIAL_ADMIN_PASSWORD=)uHVNKy1iFUJ(    # Sets the demo admin user password when using demo configuration, required for OpenSearch 2.12 and later
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    volumes:
      - opensearch-data1:/usr/share/opensearch/data # Creates volume called opensearch-data1 and mounts it to the container
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    networks:
      - rvelastic-net # All of the containers will join the same Docker bridge network
  opensearch-dashboards:
    restart: always
    image: opensearchproject/opensearch-dashboards:latest # Make sure the version of opensearch-dashboards matches the version of opensearch installed on other nodes
    container_name: opensearch-dashboards
    ports:
      - 5601:5601 # Map host port 5601 to container port 5601
    expose:
      - "5601" # Expose port 5601 for web access to OpenSearch Dashboards
    environment:
      OPENSEARCH_HOSTS: '["https://opensearch-node1:9200"]' # Define the OpenSearch nodes that OpenSearch Dashboards will query
    networks:
      - rvelastic-net

  verifier: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: stefno83/tesi-smurino/verifier:1.0.0 # Specifying the latest available image - modify if you want a specific version
    container_name: verifier
    environment:
      - nothing=verifier
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 8082:8080 # REST API
    expose:
      - "8082"
    networks:
      - rvelastic-net
  producer: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: stefno83/tesi-smurino/producer:1.0.0 # Specifying the latest available image - modify if you want a specific version
    container_name: producer
    environment:
      - CUSTOM_KAFKA_ADDRESS=kafka:9092
      - CUSTOM_KAFKA_DESTINATION_TOPIC=develop-1
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 8083:8080 # REST API
    expose:
      - "8083"
    networks:
      - rvelastic-net

  worker: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: stefno83/tesi-smurino/worker:1.0.0 # Specifying the latest available image - modify if you want a specific version
    container_name: worker
    environment:
      - CUSTOM_KAFKA_ADDRESS=kafka:9092
      - CUSTOM_KAFKA_GROUP=my-cg
      - CUSTOM_KAFKA_DESTINATION_TOPIC=develop-2
      - CUSTOM_KAFKA_SOURCE_TOPIC=develop-1
      - CUSTOM_VERIFIER_FIELD=actionEnabled
      - CUSTOM_VERIFIER_ADDRESS=http://verifier:8080/verify
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 8080:8080 # REST API
    expose:
      - "8080"
    networks:
      - rvelastic-net

  writer: # This is also the hostname of the container within the Docker network (i.e. https://opensearch-node1/)
    image: stefno83/tesi-smurino/writer:1.0.0 # Specifying the latest available image - modify if you want a specific version
    container_name: writer
    restart: on-failure
    environment:
      - CUSTOM_KAFKA_ADDRESS=kafka:9092
      - CUSTOM_KAFKA_SOURCE_TOPIC=develop-2
      - CUSTOM_KAFKA_GROUP=writer-gr-a
      - CUSTOM_OPENSEARCH_ADDRESS=opensearch-node1
      - CUSTOM_OPENSEARCH_PORT=9200
      - CUSTOM_OPENSEARCH_INDEX=rvelastic.index
      - CUSTOM_OPENSEARCH_USER=admin
      - CUSTOM_OPENSEARCH_PASSWORD=admin
    ulimits:
      memlock:
        soft: -1 # Set memlock to unlimited (no soft or hard limit)
        hard: -1
      nofile:
        soft: 65536 # Maximum number of open files for the opensearch user - set to at least 65536
        hard: 65536
    ports:
      - 8081:8080 # REST API
    expose:
      - "8081"
    networks:
      - rvelastic-net
  #  depends_on:
  #    - opensearch-node1
  #  healthcheck:
  #    test: curl --fail http://localhost:5000/ || exit 1
  #    interval: 40s
  #    timeout: 30s
  #    retries: 3
  #    start_period: 60s

volumes:
  kafka-volume:
  zookeeper-volume:
  opensearch-data1:

networks:
  rvelastic-net: